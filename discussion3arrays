public class disscussion3arrays {
	/** Consider a method that inserts an int item into an int[] arr at the given position */
	public static int[] insert(int[] arr,int item, int position) {
		int length = arr.length;
		int[] a = new int[length+1];
		if(position > length) {
			a[length] = item;
			return a;
		}
		System.arraycopy(arr, 0, a, 0, position);
		a[position] = item;
		System.arraycopy(arr,position,a,position+1,length-position);
		return a;		
	}
	/** lose last number of array */
	public static void insertDestructively(int[] arr,int item,int position) {
		int length = arr.length;
		if(position > length) {
			arr[length] = item;
		}else {
			for(int i = length-1;i > position;i++) {
				arr[i] = arr[i-1];
			}
			arr[position] = item;
		}
		
	}
	/** Consider a method that destructively reverses the items in arr */
	public static void reverse(int[] arr) {
		int length = arr.length;
		for(int i=0; i < length/2;i++) {
			int temp = 0;
			temp = arr[i];
			arr[i] = arr[length-i-1];
			arr[length-i-1] = temp;
		}
	}
	/**Write a non-destructive method replicate(int[] arr) that replaces the  */
   /**number at index i with arr[i] copies of itself */
	public static int[] replicate(int[] arr) {
		int sum = 0;
		for(int i = 0;i < arr.length; i++) {
		sum = sum+arr[i];
		}		
		int[] a = new int[sum];
		int currentIndex = 0;
		for(int num : arr) {
			for(int i = 0;i < num;i++) {
			   a[currentIndex] = num;
			   currentIndex++;
		 }
		}
		return a;	
	}
   public static void main(String[] args){
      int[] x = {5,9,14,15};
      int[] updatedArray = insert(x,6,2);  
      //insertDestructively(x,6,2);
      reverse(x);  
        for (int num : updatedArray) {
            System.out.print(num + " ");
        }
        for (int num : x) {
            System.out.print(num + " ");
        }
       int[] replicated = replicate(x);
       for(int num : replicated) {
    	   System.out.print(num +" ");
       }
    }
}
